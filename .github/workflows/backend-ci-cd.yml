name: Django CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
  AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
  AWS_S3_ENDPOINT_URL: ${{ secrets.AWS_S3_ENDPOINT_URL }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # Step 3: Navigate to the back-end directory and install dependencies
      - name: Install Dependencies
        run: |
          cd back-end
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run migrations on production database
      - name: Run Migrations
        run: |
          cd back-end
          python manage.py migrate --noinput

      # Step 5: Create default users
      - name: Create Default Users
        run: |
          cd back-end
          python manage.py create_default_users

      # Step 6: Run collectstatic on production database
      - name: Run Collectstatic
        run: |
          cd back-end
          python manage.py collectstatic --noinput